@startuml

skinparam sequenceBoxBorderColor #black
skinparam NoteBorderColor #black

skinparam sequence {
    ArrowColor DarkBlue
    ActorBackgroundColor White
    ActorBorderColor black
    LifeLineBorderColor DarkBlue
    LifeLineBackgroundColor #A9DCDF
    BoxPadding 20
    ParticipantPadding 20
    ParticipantBorderColor Black
    ParticipantBackgroundColor White
}

autonumber "<b>[00] "
footer created by Brian Savage 07/01/2021 \n all rights reservrd David's Bridal Inc.

title Order Pick Up Text Messages - Future

box "DBI" #D4E1F5
participant "Data Services" as DBI_DATA
participant "API Services" as DBI_API
actor "DBI Stylist" as DBI_STY
end box

box "Liveperson" #D4E1F5
participant "Conversational Cloud" as LPCC
participant "Proactive Messaging API Service" as LPPM
end box

box "Twiliow" #D4E1F5
participant "OPT OUT API Service" as TWAS
end box

actor "DBI Customer" as DBI_CUS

DBI_DATA -> DBI_API : Send Data
DBI_API -> LPPM : send message
note over DBI_STY, LPCC #EEE
<b>Payload Sent to Proactive Messaging
- Message Content
- Order ID
- Customer Information Object (customer id)
- Store ID
end note
LPPM -> TWAS : send message for OPT OUT Check
TWAS -> DBI_CUS : send message to customer

activate LPCC

LPCC <- DBI_CUS : she replies to text
LPCC <-> DBI_CUS : skill interacts with her
note over LPCC,DBI_CUS #EEE
<b>Attributes Sent to Proactive Messaging Leveraged for Conversation between Bot & Customer
This interaction should begin with knowing who the customer is and have no need to request 
information to identify them. When they choose to, or are sent to, a conversation with a 
stylist the system will know which store skill to queue them in.
end note
DBI_STY <- LPCC : skill to stylist
deactivate LPCC

DBI_STY <-> LPCC : stylist to customer
@enduml